{
 "recdiv.recdiv_works": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_works",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "1e6274648f9cd9c85dd67f845bdd8e057823ba3f9bdb2e8e7741b71e4ffa45d6"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_works",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(induct m)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"recdiv\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"recdiv\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(lift-if)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(prop)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(typepred \"j\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(case \"j=0\")",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.1.1",
                "name": "(2.1.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.1.1",
                  "name": "(hide -2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.1.1",
                  "name": "(inst?)",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "2.1.1.1",
                    "name": "(2.1.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.1.1.1",
                      "name": "(replace -1)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.1.1.1",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "2.1.1.2",
                    "name": "(2.1.1.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.1.1.2",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "2.1.2",
                "name": "(2.1.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.1.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(typepred \"j\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_lessthan": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_lessthan",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "36726f9a9b84fa8d5a16efc884e3bf6198ff11c467044701dad86a2c86f5e8c3"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_lessthan",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(induct m)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(expand \"recdiv\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(induct n)",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(lemma \"recdiv_identity\")",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(inst?)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(skeep)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(hide -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(expand \"recdiv\" 1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(lift-if)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(prop)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.2.1",
                "name": "(2.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.1",
                  "name": "(simplify -1 lr)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(grind)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(typepred \"ja\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(typepred \"j\")",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(postpone)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               },
               {
                "branch": "2.2.2",
                "name": "(2.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.2",
                  "name": "(postpone)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_symmetric": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_symmetric",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "0684ebabd116d49ab108f663bf6b985485694266b600e451be2d4c1d37f56d75"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_symmetric",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"recdiv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"recdiv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(propax)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_by_one_is_m": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_by_one_is_m",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "9ec48552d88755cb6357c980df8b56030cd238c495888c0760bdb35cf942a8cb"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_by_one_is_m",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(induct m)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand \"recdiv\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"recdiv\" 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_rem": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_rem",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "bd0a74db724592579e54ae1f0b9acce9e5bfd19801d004a38e8820278998da04"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_rem",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(expand \"recdiv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(propax)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "recdiv.m_recdiv_by_one_is_m": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "m_recdiv_by_one_is_m",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "85cb663065eff6df5424cc14f4639e6aec83ff5860f234ca229886063065bcac"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "m_recdiv_by_one_is_m",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(induct m)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(expand \"recdiv\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "1",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"recdiv\" 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_identity": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_identity",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "36726f9a9b84fa8d5a16efc884e3bf6198ff11c467044701dad86a2c86f5e8c3"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_identity",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(induct m)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(grind)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(expand \"recdiv\" 1)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_zero_property": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_zero_property",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "36726f9a9b84fa8d5a16efc884e3bf6198ff11c467044701dad86a2c86f5e8c3"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_zero_property",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"recdiv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(propax)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_only_rem": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_only_rem",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "36726f9a9b84fa8d5a16efc884e3bf6198ff11c467044701dad86a2c86f5e8c3"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_only_rem",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"recdiv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(propax)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_TCC1": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_TCC1",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "36726f9a9b84fa8d5a16efc884e3bf6198ff11c467044701dad86a2c86f5e8c3"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_TCC1",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(subtype-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_TCC2": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_TCC2",
    "status": "unfinished",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "36726f9a9b84fa8d5a16efc884e3bf6198ff11c467044701dad86a2c86f5e8c3"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_TCC2",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(termination-tcc)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ],
 "recdiv.recdiv_reflexivity_is_one": [
  {
   "info": {
    "theory": "recdiv",
    "formula": "recdiv_reflexivity_is_one",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "36726f9a9b84fa8d5a16efc884e3bf6198ff11c467044701dad86a2c86f5e8c3"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "recdiv_reflexivity_is_one",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"recdiv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"recdiv\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(propax)",
      "type": "proof-command",
      "rules": []
     }
    ]
   }
  }
 ]
}